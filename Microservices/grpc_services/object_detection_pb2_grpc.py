# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import object_detection_pb2 as object__detection__pb2


class ObjectDetectionProcessingServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ObjectDetectionProcess = channel.unary_unary(
        '/object_detection.ObjectDetectionProcessingService/ObjectDetectionProcess',
        request_serializer=object__detection__pb2.ArrayImage.SerializeToString,
        response_deserializer=object__detection__pb2.ObjectDetectResult.FromString,
        )


class ObjectDetectionProcessingServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ObjectDetectionProcess(self, request, context):
    """ObjectDetectionProcess la giao thuc ma gRPC client se truyen toi gRPC server
    ArrayImage la dinh nghia cua requested input voi cac element : Image_bytes, Image_shape, Image_type
    ObjectDetectResult la dinh nghia cua responded output voi cac element :objects_bbs, objects_bbs_shape, objects_bbs_type, labels
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ObjectDetectionProcessingServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ObjectDetectionProcess': grpc.unary_unary_rpc_method_handler(
          servicer.ObjectDetectionProcess,
          request_deserializer=object__detection__pb2.ArrayImage.FromString,
          response_serializer=object__detection__pb2.ObjectDetectResult.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'object_detection.ObjectDetectionProcessingService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
